name: Rust

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache target directory
        uses: actions/cache@v3
        with:
          path: target/
          key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/*.rs') }}
          restore-keys: |
            ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}-
            ${{ runner.os }}-target-

      - name: Cache cargo binaries
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin/
          key: ${{ runner.os }}-cargo-bin-nextest-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-bin-nextest-

      - name: Install nextest
        run: |
          if ! command -v cargo-nextest &> /dev/null; then
            cargo install --locked cargo-nextest
          else
            echo "cargo-nextest already installed, skipping..."
          fi

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo nextest run --verbose

  security:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Cache Cargo registry (security)
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-security-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-security-
            ${{ runner.os }}-cargo-registry-

      - name: Cache target directory (security)
        uses: actions/cache@v3
        with:
          path: target/
          key: ${{ runner.os }}-target-security-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/*.rs') }}
          restore-keys: |
            ${{ runner.os }}-target-security-${{ hashFiles('**/Cargo.lock') }}-
            ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}-
            ${{ runner.os }}-target-

      - name: Cache security tool binaries
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin/
          key: ${{ runner.os }}-cargo-bin-security-${{ hashFiles('**/Cargo.lock') }}-audit-vet
          restore-keys: |
            ${{ runner.os }}-cargo-bin-security-${{ hashFiles('**/Cargo.lock') }}-
            ${{ runner.os }}-cargo-bin-security-
            ${{ runner.os }}-cargo-bin-nextest-

      - name: Install security tools
        run: |
          # Install cargo-audit if not cached
          if ! command -v cargo-audit &> /dev/null; then
            echo "Installing cargo-audit..."
            cargo install --locked cargo-audit
          else
            echo "cargo-audit already installed, skipping..."
          fi

          # Install cargo-vet if not cached
          if ! command -v cargo-vet &> /dev/null; then
            echo "Installing cargo-vet..."
            cargo install --locked cargo-vet
          else
            echo "cargo-vet already installed, skipping..."
          fi

      - name: Security Audit
        run: cargo audit --deny warnings

      - name: Supply Chain Verification
        run: cargo vet --locked

      - name: Security Linting
        run: cargo clippy --all-targets --all-features -- -D clippy::pedantic
